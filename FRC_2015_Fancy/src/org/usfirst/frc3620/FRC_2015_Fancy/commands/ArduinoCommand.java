// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3620.FRC_2015_Fancy.commands;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.usfirst.frc3620.FRC_2015_Fancy.Robot;

/**
 *
 */
public class ArduinoCommand extends Command {
	Logger logger = LoggerFactory.getLogger(getClass());
	Timer timer = new Timer();
	int i = 0;

	public ArduinoCommand() {
		// Use requires() here to declare subsystem dependencies
		// eg. requires(chassis);

		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.arduinoSubsystem);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	protected void initialize() {
		Robot.commandInitialized(this);
		Robot.arduinoSubsystem.writeToRioduino(-4);
		i = 0;

		timer.reset();
		timer.start();
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
		if (timer.hasPeriodPassed(2.0)) {
			++i;
			logger.info ("ArduinoCommand 2 fire " + i);
			Robot.arduinoSubsystem.writeToRioduino(i);
		}
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		return false;
	}

	// Called once after isFinished returns true
	protected void end() {
		Robot.commandEnded(this);
		Robot.arduinoSubsystem.writeToRioduino(-1);
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
		Robot.commandInterrupted(this);
		Robot.arduinoSubsystem.writeToRioduino(-2);
	}
}
