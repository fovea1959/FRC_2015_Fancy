// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3620.FRC_2015_Fancy.subsystems;

import org.usfirst.frc3620.FRC_2015_Fancy.RobotMap;
import org.usfirst.frc3620.FRC_2015_Fancy.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class ProjectSubsystem extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    AnalogInput analogInput0 = RobotMap.projectSubsystemAnalogInput0;
    Servo servo0 = RobotMap.projectSubsystemServo0;
    SpeedController speedController4 = RobotMap.projectSubsystemSpeedController4;
    DigitalInput digitalInput0 = RobotMap.projectSubsystemDigitalInput0;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void motorPlus() {
    	speedController4.set(0.5);
    }
    public void motorMinus() {
    	speedController4.set(-0.5);
    }
    public void motorFreeze() {
    	speedController4.set(0);
    }
    public void motorMinusSafe() {
    	if (motorSwitchIsSafe()) {
    		motorMinus();
    	} else {
    		motorFreeze();
    	}
    }
    public void motorPlusSafe() {
    	if (motorSwitchIsSafe()) {
    		motorPlus();
    	} else {
    		motorFreeze();
    	}
    }
    public boolean motorSwitchIsSafe() {
    	return digitalInput0.get();
    }
    public double getAnalogVoltage() {
    	return analogInput0.getVoltage();
    }
    public double getAnalogDegrees() {
    	double a = getAnalogVoltage();
    	double d = a * (180. / 5.);
    	return d;
    }
    public void servoSet(double d) {
    	servo0.setAngle(d);
    }
}

